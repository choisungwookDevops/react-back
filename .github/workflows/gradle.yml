# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

# on:
#   push:
#     branches: [ master ]
#   pull_request:
#     branches: [ master ]

# reference: https://stackoverflow.com/questions/58177786/get-the-current-pushed-tag-in-github-actions/58178121#58178121
on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew 
          
    - name: Build with Gradle
      run: ./gradlew build --exclude-task test
      
    - name: copy jar
      run: mkdir output && cp build/libs/*.jar output
      
    - name: upload jar.zip file
      uses: actions/upload-artifact@v2
      with:
        name: jar
        path: output
        
  docker-build-push:
    runs-on: ubuntu-latest
    needs: build
    env:
      appname: "github-action-test"
      namespace: "inflearn-prod"
    
    steps:
    - uses: actions/checkout@v2    
    
    - name: Download jar.zip file
      uses: actions/download-artifact@v2
      with:
        name: jar

    - name: set tag
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/v}" >> $GITHUB_ENV
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:          
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
    
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_IMAGENAME }}:${{ env.RELEASE_VERSION }}

    - name: change helm template(docker image version)
      run: |
        sed -i "s/__IMAGENAME__/${{ secrets.DOCKERHUB_USERNAME }}\/${{ secrets.DOCKERHUB_IMAGENAME }}/g" charts/values.yaml
        sed -i "s/__TAG__/${{ env.RELEASE_VERSION }}/g" charts/values.yaml
    
    # reference: https://github.com/helm/chart-releaser-action
    - name: Install Helm
      run: |
        curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
        chmod 700 get_helm.sh
        ./get_helm.sh
        
    - name: Copy config
      run: |
        mkdir -p $HOME/.kube
        echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config
        
    - name: Deploy app
      run: helm upgrade ${{ env.appname }} --install --namespace ${{ env.namespace }} ./charts